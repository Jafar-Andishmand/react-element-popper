{
  "Home": "خانه",
  "Installation & Usage": "نصب و راه اندازی",
  "Props & Positions": "پراپ ها و موقعیت ها",
  "Props": "پراپ ها",
  "Positions": "موقعیت ها",
  "Position": "موقعیت",
  "position_description": [
    "تمام مقدار هایی که  میتوانید به عنوان موقعیت  برای popper  در نظر بگیرید در جدول زیر نوشته شده است.",
    "همچنین میتوانید بجای موقعیت های نوشته شده ، از مقدار جایگزین آن نیز استفاده کنید ."
  ],
  "Alternative": "جایگزین",
  "Usage": "استفاده",
  "Name": "نام",
  "Type": "تایپ",
  "Default": "پیشفرض",
  "or": "یا",
  "npm_description": "برای نصب این کتابخانه توسط npm کد زیر را در ترمینال خود بنویسید .",
  "yarn_description": "اگر از yarn استفاده میکنید میتونید از کد زیر استفاده کنید.",
  "Main Position": "موقعیت اصلی",
  "Relative Position": "موقعیت نسبی",
  "Fix Main Position": "ثابت ماندن موقعیت اصلی",
  "Fix Relative Position": "ثابت ماندن موقعیت نسبی",
  "Offset Y": "فاصله عمودی",
  "Offset X": "فاصله افقی",
  "Top": "بالا",
  "Bottom": "پایین",
  "Left": "چپ",
  "Right": "راست",
  "Start": "شروع",
  "Center": "وسط",
  "End": "پایان",
  "Disable": "غیر فعال",
  "Enable": "فعال",
  "Arrow": "فلش",
  "Shadow": "سایه",
  "Refrence Element": "عنصر مرجع",
  "Popper Element": "عنصر متحرک",
  "Descriptions": "توضیحات",
  "demo_descriptions": [
    "react element popper برای ایجاد کردن منو ، منو های تو در تو ، dropdown ها و متحرک سازی المنت ها نسبت به المنت مرجع کاربرد دارد.",
    "برای ثابت کردن موقعیت اصلی ، ثابت ماندن موقعیت اصلی و برای ثابت کردن موقعیت نسبی ثابت ماندن موقعیت نسبی را فعال کنید.",
    "هنگامی که مقدار موقعیت اصلی، بالا یا پایین باشد فاصله عمودی، و هنگامی که مقدار موقعیت اصلی چپ یا راست باشد،  فاصله افقی فعال می شود."
  ],
  "Basic Import": "ایمپورت کردن کتابخانه در پروژه",
  "basic_import": "در بیشتر مواقع ایمپورت کردن ElementPopper  به تنهایی کفایت میکنه.",
  "basic_import2": "ولی اگر بخواید از فلش (arrow) استفاده کنید، یا بخواید برای پاپر از سایه پیشفرض استفاده کنید باید استایل ها رو هم import کنید. ",
  "Creating DropDown": "ایجاد لیست کشویی",
  "dropdown": [
    "ایجاد Drop Down با ElementPopper خیلی ساده است .",
    "در این مثال یک dropdown ساده با حداقل css را با Element Popper ایجاد میکنیم ."
  ],
  "Simple DropDown": "ساخت لیست کشویی (dropdown) ساده",
  "code": "کد",
  "style.css:": "فایل سی اس اس:",
  "click here": "کلیک کنید",
  "item 1": "آیتم 1",
  "item 2": "آیتم 2",
  "item 3": "آیتم 3",
  "item 4": "آیتم 4",
  "Simple DropDown With Animation": "منو کشویی (drop down) با انیمیشن شروع",
  "dropdown_animation": "اگر می خواهید ظاهر شدن لیست به همراه انیمیشن باشد، از prop انیمیشن استفاده کنید.",
  "Position Left": "منو کشویی در موقعیت چپ",
  "dropdown_right": "شما میتوانید به جای موقعیت bottom که در مثال های بالا استفاده شد ، از هر یک از مقدار های top ، right و چپ هم استفاده کنید .",
  "Nested DropDown": "لیست های کشویی تو در تو",
  "item": "آیتم",
  "Simple Example": "مثال ساده",
  "simple_nested": "با وارد کردن یک ElementPopper  دیگر به عنوان مقدار popper ، میتوانید به هر تعداد که لازم دارید ، منو های تو در تو ایجاد کنید .",
  "nested_dropdown": "در این مثال، با استفاده از قابلیتی که در بالا توضیح داده شد ، یک dropdown با منو های تو در تو ایجاد شده است .",
  "last one": "آخری",
  "Multi Select & Handle Click Outside": "انتخابگر چند تایی و مدیریت کلیک های خارج از محدوده",
  "NavBar": "ناو بار",
  "core_concepts_description": "المنت پاپر عناصر مرجع و متحرک شما رو در چندین کانتینر قرار میده که برای طراحی بهتر layout هاتون باید از چیدمان اون کانتینر ها اطلاع داشته باشید.",
  "core_concepts": [
    "کانتینر اول با مقدار display برابر با inline-block هست که تمام عناصر مرجع ، متحرک و فلش (در صورت فعال بودن) را در بر میگیرد و برای بدست آوردن مقدار سمت چپ و بالای عنصر مرجع استفاده می شود.",
    "کانتینر دوم دارای پوزیشن absolute و مقدار بالا و چپ برابر با صفر هست ، که برای موقعیت دهی عنصر متحرک در صفحه با تنظیم مقدار transform آن استفاده می شود.",
    "در آخر ، آخرین کانتینر با موقعیت static که در بر گیرنده عنصر متحرک هست و برای بدست آوردن مقدار دقیق عرض و ارتفاع عنصر متحرک استفاده می شود."
  ],
  "container with inline-block display": "کانتینر با مقدار display برابر با inline-block",
  "container with absolute position": "کانتینر با پوزیشن absolute",
  "container with static position": "کانتینر با پوزیشن static",
  "Arrow (optional)": "فلش (اختیاری)",
  "Reference and Popper Larger Than Parent": "المنت های مرجع و popper با اندازه بزرگ تر از المنت والد",
  "popper_larger_parent": [
    "در صورتی که طول یا ارتفاع المنت های مرجع با متحرک بزرگ تر از المنت والد باشن ، در صورتی موقعیت اصلی عنصر متحرک جابجا میشه که المنت مرجع از وسط المنت والد عبور کرده باشه .",
    "این شرط برای این قرار داده شده که عنصر متحرک، همیشه در قسمتی از المنت والد قرار بگیره که فضای بیشتری داشته باشه <b>و فقط زمانی در نظر گرفته میشه که لبه عنصر متحرک به لبه قسمت قابل مشاهده شدن document برخورد نکرده باشه </b>."
  ],
  "important_notes": [
    "مهم ترین نکته اینه که این کتابخونه فقط سعی میکنه در موقعیتی که براش مشخص کردید قرار بگیره ! چون ممکنه چینش المنت های در بر گیرنده آن جوری باشه که popper در اون موقعیت جا نشه، یا کاربر شروع به اسکرول کردن یا ریسایز کردن صفحه کنه که در اون صورت هم باز موقعیت المنت متحرک عوض میشه. البته شما میتونید این کامپوننت رو مجبور کنید تا موقعیت پاپر رو دقیقا همونجا که شما میخواید نشون بده، که در این صورت باید از پراپرتی های fixMainPosition و fixRelativePosition استفاده کنید.",
    "برای ایجاد فاصله بین المنت مرجع و متحرک از مارجین و پدینگ استفاده نکنید و به جاش از پراپرتی های offsetY و offsetX که در کامپوننت قرار داده شده استفاده کنید.",
    "سعی نکنید پوزیشن کانتینر رو با سی اس اس یا استایل به relative تغییر بدید چون باعث اخلال تو محاسبات موقعیت میشه.",
    "برای فیکس کردن موقعیت اصلی مقدار fixMainPosition رو برابر true و برای فیکس کردن موقعیت نسبی مقدار fixRelativePosition رو برابر true قرار بدید.",
    "اگر میخواید اندازه المنت مرجع رو تغییر بدید مقدار box-sizing اش رو border-box بزارید.",
    "اگر کامپوننت داخل کانتینر با پوزیشن فلکس و فلکس داریکشن column باشه، بهتره برای کانتینر المنت پاپر طول تعریف کنید."
  ],
  "Core Concepts": "مفاهیم اولیه",
  "Important Notes": "نکته های مهم",
  "center": "مرکز"
}
